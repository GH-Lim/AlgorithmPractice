N, M = map(int, input().split())
arr = [list(map(int, input().split())) for _ in range(N)]

tetros = [
    [(1, 1), (1, 0), (0, 1), (0, 0)],  # ㅁ

    [(0, 3), (0, 2), (0, 1), (0, 0)],  # ㅡ
    [(3, 0), (2, 0), (1, 0), (0, 0)],  # |

    [(1, 1), (-1, 0), (1, 0), (0, 0)],  # L
    [(1, -1), (-1, 0), (1, 0), (0, 0)],
    [(-1, -1), (-1, 0), (1, 0), (0, 0)],
    [(-1, 1), (-1, 0), (1, 0), (0, 0)],

    [(1, 1), (0, -1), (0, 1), (0, 0)],  # ㄱ
    [(1, -1), (0, -1), (0, 1), (0, 0)],
    [(-1, -1), (0, -1), (0, 1), (0, 0)],
    [(-1, 1), (0, -1), (0, 1), (0, 0)],

    [(1, 1), (0, 1), (-1, 0), (0, 0)],  # ㄱㄴ
    [(1, -1), (1, 0), (0, 1), (0 , 0)],
    [(-1, 1), (0, 1), (1, 0), (0, 0)],
    [(1, 1), (1, 0), (0, -1), (0, 0)],

    [(-1, 0), (0, 1), (1, 0), (0, 0)],  # ㅏ
    [(1, 0), (0, -1), (-1, 0), (0, 0)],
    [(0, -1), (0, 1), (1, 0), (0, 0)],
    [(0, 1), (0, -1), (-1, 0), (0, 0)],
]

ans = 0
for i in range(N):
    for j in range(M):
        for tetro in tetros:
            sub_ans = 0
            for dy, dx in tetro:
                ny, nx = i + dy, j + dx
                if 0 <= ny < N and 0 <= nx < M:
                    sub_ans += arr[ny][nx]
                else:
                    break
            else:
                ans = max(ans, sub_ans)

print(ans)
